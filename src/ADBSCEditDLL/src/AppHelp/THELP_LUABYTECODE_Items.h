
HLP_LABEL("LUA BYTE CODE:")
HLP_ITEM(nullptr, "MOVE", "Copy a value between registers")
HLP_ITEM("LOAD", "LOADK", "Load a constant into a register")
HLP_ITEM("LOAD", "LOADKX", "Load a constant into a register")
HLP_ITEM("LOAD", "LOADBOOL", "Load a boolean into a register")
HLP_ITEM("LOAD", "LOADNIL", "Load nil values into a range of registers")
HLP_ITEM(nullptr, "GETUPVAL", "Read an upvalue into a register")
HLP_ITEM("GET", "GETTABUP", "Read a value from table in up-value into a register")
HLP_ITEM(nullptr, "GETTABLE", "Read a table element into a register")
HLP_ITEM("SET", "SETTABUP", "Write a register value into table in up-value")
HLP_ITEM(nullptr, "SETUPVAL", "Write a register value into an upvalue")
HLP_ITEM(nullptr, "SETTABLE", "Write a register value into a table element")
HLP_ITEM(nullptr, "NEWTABLE", "Create a new table")
HLP_ITEM(nullptr, "SELF", "Prepare an object method for calling")
HLP_ITEM(nullptr, "ADD", "Addition operator")
HLP_ITEM(nullptr, "SUB", "Subtraction operator")
HLP_ITEM(nullptr, "MUL", "Multiplication operator")
HLP_ITEM(nullptr, "MOD", "Modulus (remainder) operator")
HLP_ITEM(nullptr, "POW", "Exponentation operator")
HLP_ITEM(nullptr, "DIV", "Division operator")
HLP_ITEM(nullptr, "IDIV", "Integer division operator")
HLP_ITEM(nullptr, "BAND", "Bit-wise AND operator")
HLP_ITEM(nullptr, "BOR", "Bit-wise OR operator")
HLP_ITEM(nullptr, "BXOR", "Bit-wise Exclusive OR operator")
HLP_ITEM(nullptr, "SHL", "Shift bits left")
HLP_ITEM(nullptr, "SHR", "Shift bits right")
HLP_ITEM(nullptr, "UNM", "Unary minus")
HLP_ITEM(nullptr, "BNOT", "Bit-wise NOT operator")
HLP_ITEM(nullptr, "NOT", "Logical NOT operator")
HLP_ITEM(nullptr, "LEN", "Length operator")
HLP_ITEM(nullptr, "CONCAT", "Concatenate a range of registers")
HLP_ITEM("GOTO", "JMP", "Unconditional jump")
HLP_ITEM("EQ", "EQ", "Equality test, with conditional jump")
HLP_ITEM("LT", "LT", "Less than test, with conditional jump")
HLP_ITEM("LE", "LE", "Less than or equal to test, with conditional jump")
HLP_ITEM(nullptr, "TEST", "Boolean test, with conditional jump")
HLP_ITEM(nullptr, "TESTSET", "Boolean test, with conditional jump and assignment")
HLP_ITEM("CALL", "CALL", "Call a closure")
HLP_ITEM("CALL", "TAILCALL", "Perform a tail call")
HLP_ITEM("RETURN", "RETURN", "Return from function call")
HLP_ITEM(nullptr, "FORLOOP", "Iterate a numeric for loop")
HLP_ITEM(nullptr, "FORPREP", "Initialization for a numeric for loop")
HLP_ITEM(nullptr, "TFORLOOP", "Iterate a generic for loop")
HLP_ITEM(nullptr, "TFORCALL", "Initialization for a generic for loop")
HLP_ITEM(nullptr, "SETLIST", "Set a range of array elements for a table")
HLP_ITEM("CLOSURE", "CLOSURE", "Create a closure of a function prototype")
HLP_ITEM(nullptr, "VARARG", "Assign vararg function arguments to registers")

#undef HLP_LABEL
#undef HLP_ITEM
